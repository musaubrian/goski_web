package views

templ Index() {
	@Base() {
		<div class="w-full flex flex-col justify-center items-center bg-slate-900 text-slate-100 tracking-tight">
			<div class="text-center text-md w-full p-2 transition-all fixed top-0 left-0 z-50" id="info-banner">
				<!--errors, success information get chucked here-->
			</div>
			<form id="ascii-form" class="flex flex-col justify-center items-center w-full h-screen text-lg font-light" method="POST" action="/to-ascii" enctype="multipart/form-data">
				<h1 class="text-4xl font-semibold mb-6 text-center text-wrap text-balance">Image > ASCII Generator</h1>
				<label id="upload-label" for="file-upload" class="cursor-pointer min-w-3/6 w-5/6 md:w-3/6 h-64 bg-slate-800 hover:bg-slate-700 transition-all border-2 border-slate-700 rounded-lg p-3 flex flex-col justify-center items-center">
					<div id="upload-text" class="font-light text-center flex flex-col items-center justify-center">
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-10 text-slate-300">
							<path stroke-linecap="round" stroke-linejoin="round" d="M12 16.5V9.75m0 0 3 3m-3-3-3 3M6.75 19.5a4.5 4.5 0 0 1-1.41-8.775 5.25 5.25 0 0 1 10.233-2.33 3 3 0 0 1 3.758 3.848A3.752 3.752 0 0 1 18 19.5H6.75Z"></path>
						</svg>
						Pick Image to convert
					</div>
					<img id="uploaded-image" class="hidden h-full w-full object-cover rounded-lg" alt="Uploaded image preview"/>
					<input id="file-upload" type="file" name="image" class="hidden"/>
				</label>
				<button type="submit" class="mt-6 bg-slate-900 w-4/6 md:w-1/6  bg-slate-700 p-3 rounded hover:bg-slate-800 transition-all">Convert</button>
			</form>
			<div class="flex flex-col justify-center items-center min-h-screen w-full mt-8 border-t border-slate-600 py-2">
				<div id="ascii-image" class="w-full h-full  bg-slate-900 text-center">
					<pre id="ascii-output" class="whitespace-pre font-mono text-[4.2px]"></pre>
				</div>
				<button id="save-btn" type="button" onclick="saveAsImage()" class=" hidden mt-6 bg-blue-600 inline-flex items-center justify-center gap-2 mb-4 px-6 py-2 rounded hover:bg-blue-700 transition-all">
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3"></path>
					</svg>
					save creation
				</button>
			</div>
		</div>
		<script>
                        let imgName;
                        function saveAsImage() {
                                setLoading("Saving image...")
                                const asciiOutput = document.getElementById("ascii-image")

                                html2canvas(asciiOutput, {
                                        backgroundColor: window.getComputedStyle(asciiOutput).backgroundColor,
                                        scale: 4
                                    }).then(canvas => {
                                        const link = document.createElement('a')
                                        link.href = canvas.toDataURL('image/png')
                                        link.download = `${imgName}.ascii.png`
                                        link.click()
                                        setSuccess("Saved Successfully")
                                    }).catch(error => {
                                        console.error('Error saving ASCII art as image:', error)
                                        setError("Failed to save image. Please try again.")
                                    })
                        }

                        function showSaveBtn() {
                                const saveBtn = document.getElementById("save-btn")
                                saveBtn.classList.remove("hidden")
                        }

                        function setLoading(msg) {
                                const infoBanner = document.getElementById("info-banner")

                                infoBanner.classList.remove("hidden")
                                infoBanner.classList.remove("bg-emerald-500", "bg-red-400")
                                infoBanner.classList.add("bg-sky-600")
                                infoBanner.innerHTML = msg
                        }

                        function setError(msg) {
                                const infoBanner = document.getElementById("info-banner")

                                infoBanner.classList.remove("hidden")
                                infoBanner.classList.remove("bg-emerald-500", "bg-sky-600")
                                infoBanner.classList.add("bg-red-400")
                                infoBanner.innerHTML = msg
                        }

                        function setSuccess(msg) {
                                const infoBanner = document.getElementById("info-banner")

                                infoBanner.classList.remove("hidden")
                                infoBanner.classList.remove("bg-red-400")
                                infoBanner.classList.add("bg-emerald-500")
                                infoBanner.innerHTML = msg
                        }

                        function resetBanner() {
                                const infoBanner = document.getElementById("info-banner")
                                infoBanner.classList.add("hidden")
                        }

                        function getViewportSize() {
                            return {
                                width: Math.round(window.innerWidth *0.5),
                                height: Math.round(window.innerHeight*0.4)
                            }
                        }


                        document.getElementById('file-upload').addEventListener('change', function(event) {
                                const file = event.target.files[0];
                                const uploadLabel = document.getElementById('upload-label');
                                const uploadText = document.getElementById('upload-text');
                                const uploadedImage = document.getElementById('uploaded-image');

                                imgName = file.name.split(".")[0]

                                if (file) {
                                        resetBanner()
                                        const reader = new FileReader();
                                        reader.onload = function(e) {
                                                uploadText.classList.add('hidden');
                                                uploadedImage.src = e.target.result;
                                                uploadedImage.classList.remove('hidden');
                                                uploadLabel.classList.remove('bg-slate-50', 'border-2', 'hover:bg-slate-100');
                                                uploadLabel.classList.add('p-0');
                                        }
                                        reader.readAsDataURL(file);
                                }
                        })

                        document.getElementById('ascii-form').addEventListener('submit', async function(event) {
                                event.preventDefault();
                                setLoading("Uploading...")

                                const fileInput = document.getElementById('file-upload');

                                if (!fileInput.files.length) {
                                        setError("Nothing Picked to upload")
                                        return
                                }

                                const form = event.target;
                                const formData = new FormData(form);
                                let viewportSize = getViewportSize();

                                formData.append('viewportWidth', viewportSize.width);
                                formData.append('viewportHeight', viewportSize.height);


                                try {
                                        const response = await fetch(form.action, {
                                                method: form.method,
                                                body: formData,
                                        });

                                        const data = await response.json();
                                        if (response.ok) {
                                            if (data.ascii) {
                                                document.getElementById('ascii-output').textContent = data.ascii;
                                                setSuccess("Image converted")
                                                showSaveBtn()
                                            }
                                        } else if(data.error) {
                                            setError(data.error)
                                        }
                                } catch (error) {
                                    console.error('Error processing the request:', error);
                                    setError("Something went wrong, don't worry its not your fault")
                                }
                        })

                        resetBanner()
                </script>
	}
}
